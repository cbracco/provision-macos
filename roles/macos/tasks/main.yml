# Applies a number of macOS default settings, sets the computer name, and
# activates a color theme for Terminal.app
# https://github.com/cbracco/dotfiles/blob/master/.macos
- name: Apply macOS default settings, computer name, and a theme for Terminal.app
  shell: "{{ dotfiles_home }}/.macos"

# Sets macOS user picture
# https://github.com/osxstrap/ansible-osx-user-picture/blob/devel/tasks/user_picture.yml
- name: Create macOS user picture directory
  file:
    path: "{{ macos_user_picture_directory }}"
    state: directory
    mode: 0755
  become: yes
  check_mode: no
- name: Copy file to macOS user picture directory
  copy:
    src: "{{ macos_user_picture_file }}"
    dest: "{{ macos_user_picture_directory }}/{{ macos_user_picture_file_basename }}"
    mode: 0644
  become: yes
  register: copy_picture_result
  check_mode: no
- name: Read current value of JPEGPhoto for macOS user
  shell: dscl . read /Users/"{{ ansible_ssh_user }}" JPEGPhoto
  register: "dscl_read_jpegphoto_result"
  changed_when: false
  check_mode: no
- name: Read current value of Picture for macOS user
  shell: dscl . read /Users/"{{ ansible_ssh_user }}" Picture
  register: "dscl_read_picture_result"
  changed_when: false
  check_mode: no
- name: Delete HEX picture data for macOS user
  shell: dscl . delete /Users/"{{ ansible_ssh_user }}" JPEGPhoto
  become: yes
  when: '"No such key" not in dscl_read_jpegphoto_result.stderr'
  check_mode: no
- name: Delete existing macOS user account picture
  shell: dscl . delete /Users/"{{ ansible_ssh_user }}" Picture
  become: yes
  when: 'not (macos_user_picture_directory + "/" + macos_user_picture_file_basename in dscl_read_picture_result.stdout and copy_picture_result.changed == false)'
  check_mode: no
- name: Set new macOS user account picture
  shell: dscl . create /Users/"{{ ansible_ssh_user }}" Picture "{{ macos_user_picture_directory }}/{{ macos_user_picture_file_basename }}"
  become: yes
  when: 'not (macos_user_picture_directory + "/" + macos_user_picture_file_basename in dscl_read_picture_result.stdout and copy_picture_result.changed == false)'
  check_mode: no

# Sets macOS user desktop background image
# http://osxdaily.com/2015/08/28/set-wallpaper-command-line-macosx/
- name: Create macOS user desktop background directory
  file:
    path: "{{ macos_desktop_bg_directory }}"
    state: directory
    mode: 0755
  become: yes
  check_mode: no
- name: Copy file to macOS user desktop background directory
  copy:
    src: "{{ macos_desktop_bg_file }}"
    dest: "{{ macos_desktop_bg_directory }}/{{ macos_desktop_bg_file_basename }}"
    mode: 0644
  become: yes
  check_mode: no
- name: Set new macOS user desktop background
  shell: osascript -e 'tell application "Finder" to set desktop picture to "{{ macos_desktop_bg_directory }}/{{ macos_desktop_bg_file_basename }}" as POSIX file'
  become: yes
  check_mode: no

# Checks if FileVault full-disk encryption is enabled
- name: Check if FileVault full-disk encryption is enabled
  shell: fdesetup status
  register: filevault_enabled
  check_mode: no

# Enables FileVault full-disk encryption
# Skip this step during CI testing
- name: Enable FileVault full-disk encryption
  shell: sudo fdesetup enable -user "{{ ansible_ssh_user }}"
  when: (filevault_enabled.stdout != "FileVault is On.") and (not test_mode)
